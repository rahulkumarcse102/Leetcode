class Solution {
public:
    void solve(vector<vector<int>>& matrix, int i, int j, int prev, vector<vector<int>> &ocean){
        if(i<0 || j<0 || i>=matrix.size() || j>=matrix[0].size() || ocean[i][j]==1 || matrix[i][j]<prev)
            return;
        ocean[i][j]=1;
        solve(matrix,i+1,j,matrix[i][j],ocean);
        solve(matrix,i-1,j,matrix[i][j],ocean);
        solve(matrix,i,j-1,matrix[i][j],ocean);
        solve(matrix,i,j+1,matrix[i][j],ocean);
    }
    
    vector<vector<int>> pacificAtlantic(vector<vector<int>>& heights) {
        vector<vector<int>> ans;
        int m = heights.size();
        int n = heights[0].size();
        if(m<1)return ans;
        vector<vector<int>> pacefic(m, vector<int>(n,0));
        vector<vector<int>> atlantic(m, vector<int>(n,0));
        for(int i=0;i<n;i++){
            solve(heights,0,i,INT_MIN,pacefic);
            solve(heights,m-1,i,INT_MIN,atlantic);
        }
        
        for(int j=0;j<m;j++){
            solve(heights,j,0,INT_MIN,pacefic);
            solve(heights,j,n-1,INT_MIN,atlantic);
        }
        
        for(int i=0;i<m;i++){
            for(int j=0;j<n;j++){
                if(pacefic[i][j]==1 && atlantic[i][j]==1)
                    ans.push_back({i,j});
            }
        }
        return ans;
    }
};
